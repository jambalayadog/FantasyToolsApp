extends layout

block extra_style_sheet
    link(rel='stylesheet', href='/stylesheets/style_scheduleWeekly.css')
    //meta(name='viewport', content='width=device-width initial-scale=1')
    meta(name='viewport', content='width=device-width')

block content
    script(src='/javascripts/schedules/schedules_functions.js')
    - var search_date = new Date(season_start_date)
    - var season_start_date = new Date("2022-10-01")
    - var season_end_date = new Date("2023-04-16")  //2023-04-16
    - var first_monday_date = new Date("2022-10-03")
    - var todays_date = new Date()
    - var todays_day = todays_date.getDay() || 7
    - var number_of_teams = 32
    - var ms_in_a_day = 86400000
    - var days = (season_end_date - season_start_date) / ms_in_a_day
    - var games_per_week = 0
    - var scroll_week
    - var first_monday = new Date("2022-10-03T00:00:00")
    - var day_offset = 0
    - var matchup_length = 1 //week
    - var current_week = Math.trunc((todays_date - first_monday) / (7 * ms_in_a_day))
    - var first_day_of_week = 0
    - var total_weeks = 27
    - console.log(`current week: ${current_week}`)
    - console.log(`today's date: ${todays_date}`)
    //- console.log(`today's day: ${todays_day}`)
    - var this_monday = new Date()
    - this_monday.setHours(-24 * (todays_day - 1))
    - console.log(`this_monday: ${this_monday}`)
    //- var weekly_schedule_data = {weekly_schedule_data}
    //- console.log('hey', {weekly_schedule_data})
    //- console.log('hey', {weekly_schedule_data}[weekly_schedule_data])
    - function changeweek2(new_week) {
        - current_week += new_week
        - console.log(current_week)
        - displayTable(current_week)
    - }
    - function displayTable(week_to_display) {
        //- var table_body_element = document.getElementById("tablebody")
        - console.log(typeof(weekly_schedule_data))
        - for (schedule_data in {weekly_schedule_data}) {
                //- console.log({weekly_schedule_data}[schedule_data])
                - for (const [team, teamSchedule] of Object.entries({weekly_schedule_data}[schedule_data][week_to_display])) {
                    //- console.log(`team: ${team}`)
                    //- console.log(`teamSchedule: ${teamSchedule[0].hometeam}`)
                    //- console.log(`teamSchedule: ${teamSchedule[0].gamedate}`)
                    tr
                        td
                            div.td_container
                                div.team=team
                                div.weekly_container
                                    - var index = 0
                                    - var week_sched = teamSchedule
                                    - for (var day = 0; day <= 6; day++) {
                                        - var weekday_date = new Date(this_monday)
                                        - console.log(`weekday_date: ${weekday_date}, ${typeof(weekday_date)}`)
                                        - weekday_date.setDate(weekday_date.getDate() + day)
                                        //- console.log(team, day, weekday_date.toDateString())
                                        - if (week_sched[index] != undefined) {
                                            //- console.log(week_sched[index])
                                            - if (week_sched[index].gamedate == weekday_date.toDateString()) {
                                                div.weeklygame=teamSchedule[index].hometeam + ' vs ' + teamSchedule[index].awayteam
                                                - index++
                                            - } else {
                                                div.weeklygame=''
                                            - }
                                        - } else {
                                            div.weeklygame=''
                                        - }
                                    - }
                                div="week summary"
                - }
            - }
        - }
    div.header
        div.titletext NHL 2022-2023
        select.toggleviewbutton(onChange="location = this.value")
            option.togglevalue(value=`/scheduleWeekly`)='NHL Weekly Schedule'
            option.togglevalue(value=`/schedule`)='NHL Season Schedule'
            option.togglevalue(value=`/players`)='Players'
            option.togglevalue(value=`/teams`)='Teams'
    //-var teamlist = JSON.parse(JSON.stringify({teams}))
    div.wrapper
        table(id='schedule')
            thead
                tr
                    th
                        div.th_container
                            div.datecontainer
                                div.thisweektitle(id='thisweektitle')="week " + current_week
                                div.daysofweek
                                            div.dayofweek='M-'+this_monday.getUTCDate()
                                            div.dayofweek='T-'+(this_monday.getDate() +1)
                                            div.dayofweek='W-'+(this_monday.getDate() +2)
                                            div.dayofweek='T-'+(this_monday.getDate() +3)
                                            div.dayofweek='F-'+(this_monday.getDate() +4)
                                            div.dayofweek='S-'+(this_monday.getDate() +5)
                                            div.dayofweek='S-'+(this_monday.getDate() +6)
                            - var object_string = JSON.stringify({weekly_schedule_data})
                            //- console.log(this_monday, typeof(this_monday))
                            - var monday_date_string = JSON.stringify(this_monday)
                            - var first_monday_date_string = JSON.stringify(first_monday)
                            //select.schedulechangeweek(onChange="changeTable(this.value, "+object_string+", "+first_monday_date_string+")")
                            select.schedulechangeweek(onChange="{displayTable(week_to_display)}")
                                - for (let i = 0; i <= total_weeks; i++) {
                                    - if (i == current_week) {
                                        option.togglevalue(value=i, selected="selected")="Week " + i
                                    - } else {
                                        option.togglevalue(value=i)="Week " + i
                                    - }
                                - }
            tbody(id='tablebody')
                    - displayTable(current_week)
                    script. 
                        //displayTable(current_week)
                        //setTimeout(function () {
                            var object_string = JSON.stringify({weekly_schedule_data})
                            changeTable(#{current_week}, object_string, first_monday_date_string)
                        //},100)
    script.
        window.addEventListener('load', (event) => {
            //console.log('DOMContentLoaded');
            setTimeout(function () {
                console.log(`bbb current_week: ${#{current_week}}`)
                //var object_string = JSON.stringify({weekly_schedule_data})
                //var first_monday_date_string = JSON.stringify(first_monday)
                //changeTable(#{current_week}, object_string, first_monday_date_string)
            },100);
        });
        function changeweek(new_week) {
            changeweek2(new_week)
        }
        function update_table(new_week) {
            console.log("new week is: ", new_week)
        }
        function get_this_weeks_monday(week_to_display, first_monday_date_string) {
            var this_weeks_monday = new Date(first_monday_date_string)
            this_weeks_monday.setDate(this_weeks_monday.getDate() + week_to_display * 7)
            //console.log(`this_weeks_monday: ${this_weeks_monday}`)
            return this_weeks_monday
        }
        function changeTable(week_to_display, object_string, first_monday_date_string) {
            var this_monday = get_this_weeks_monday(week_to_display, first_monday_date_string)
            console.log(`this_weeks_monday: ${this_monday}`)
            var table_body_element = document.getElementById("tablebody")
            while (table_body_element.firstChild) {
                table_body_element.removeChild(table_body_element.lastChild);
            } 
            console.log(week_to_display)
            console.log(typeof(object_string))
            //for (schedule_data in {weekly_schedule_data}) {
            for (schedule_data in object_string) {
                //- console.log({weekly_schedule_data}[schedule_data])
                for (const [team, teamSchedule] of Object.entries(object_string[schedule_data][week_to_display])) {
                    - console.log(`team: ${team}`)
                    //- console.log(`teamSchedule: ${teamSchedule[0].hometeam}`)
                    //- console.log(`teamSchedule: ${teamSchedule[0].gamedate}`)
                    var tr_element = document.createElement('tr')
                    var td_element = document.createElement('td')
                    tr_element.appendChild(td_element)
                    var row_container = document.createElement('div')
                    row_container.className = "td_container"
                    td_element.appendChild(row_container)
                    var team_container = document.createElement('div')
                    team_container.innerText = team 
                    team_container.className = 'team'
                    row_container.appendChild(team_container)
                    var weekly_container = document.createElement('div')
                    weekly_container.className = 'weekly_container'
                    row_container.appendChild(weekly_container)
                    var index = 0
                    var week_sched = teamSchedule
                    for (var day = 0; day <= 6; day++) {
                        var weekday_date = new Date(this_monday)
                        //console.log(`weekday_date: ${weekday_date}, ${typeof(weekday_date)}`)
                        weekday_date.setDate(weekday_date.getDate() + day)
                        console.log(team, day, weekday_date.toDateString())
                        if (week_sched[index] != undefined) {
                            console.log(week_sched[index])
                            if (week_sched[index].gamedate == weekday_date.toDateString()) {
                                var game_container = document.createElement('div')
                                game_container.innerText = teamSchedule[index].hometeam + ' vs ' + teamSchedule[index].awayteam 
                                game_container.className = 'weeklygame'
                                weekly_container.appendChild(game_container)
                                index++
                            } else {
                                var game_container = document.createElement('div')
                                game_container.innerText = '' 
                                game_container.className = 'weeklygame'
                                weekly_container.appendChild(game_container)
                            }
                        } else {
                            var game_container = document.createElement('div')
                            game_container.innerText = '' 
                            game_container.className = 'weeklygame'
                            weekly_container.appendChild(game_container)
                        }
                    }
                    var week_summary = document.createElement('div')
                    week_summary.innerText = 'week summary' 
                    week_summary.className = ''
                    row_container.appendChild(week_summary)
                    // add the table row
                    table_body_element.appendChild(tr_element)
                    
                }
            }
            var this_week_element = document.getElementById('thisweektitle')
            this_week_element.innerText = "Week " + week_to_display
        }
                


