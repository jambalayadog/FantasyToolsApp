extends tableOfContents

block content
    div.title='Core Loops'
    div.subtitle='subtitle'
    div.content='content'
    div.image='image'
    div.content
        p.
            accessibility is design's tool against inaccessbility.
            inaccessibility exists in many forms 
            its up to you to decide how to support for your game
    p.
        accessibility is design's tool against inaccessbility.
        inaccessibility exists in many forms 
        its up to you to decide how to support for your game
    p 
    | accessibility is design's tool against inaccessbility.
    | inaccessibility exists in many forms 
    | its up to you to decide how to support for your game


    div.subtitle='Summary'
    div.content
        p.
            The fairly widely agreed upon view of Core Loops is
            that they are the fundamental gameplay mechanics 
            that represents your player's journey. 

    div.image='image'
    div.content
        p.
            Action -> Outcome -> Reward 
        p.
            An action (attack enemy) leads to an outcome (kill enemy) 
            and earns the player rewards (gold and experience)
        p. 
            Core Loops work at many levels:
        p 
            li='Second to Second'
                li='Move to enemy flank -> Flank enemy -> Enemy exposed'
                li='Observe enemy attack -> Raise shield -> Attack blocked'
            li='Minute to Minute'
                li='Move to enemy flank -> Flank enemy -> Enemy exposed'
                li='Observe enemy attack -> Raise shield -> Attack blocked'
            li='Hour to Hour'
                li='Move to enemy flank -> Flank enemy -> Enemy exposed'
                li='Observe enemy attack -> Raise shield -> Attack blocked'
            li='Session Loops'
                li='Play session -> Complete session -> Session rewards'
            li='Progression Loops'
        p. 
            Session loops work because they encapsulte a session with a rewarding experience.
            Each session becomes like TV episode, with a payoff at the end 
            that translates to improvements and upgrades for the player.
            The player looks forward to the next session.  
            This can create a 'one more' experience, particularly if the session length is accessible.

        p. 
            What about things that aren't loops?  Linear Threads?
        p. 
            Many things in games don't loop around on themselves, and instead follow linear paths.
            They may still interact with and contribute to other systems and their loops, 
            but they themselves have a finite and ultimate path with respect to their progression.
            Consider a story game with finite, ordered levels.  
            Uncharted is a linear adventure that progresses from location to location with an intentional story.
            You could draw this as a loop, with 'Do Level' -> 'Finish Level' -> 'Next Level', 
            but that eventually comes to the 'End Of Game' which is no longer a loop.
            It's worth noting that NG+ turns the whole game into a loop.  
            This example is more sensible than the previous, as generally with a linear, story-based game,
            you will want to map out your levels linearly, even if the underlying architecture handles the levels systemically.
        p. 
            I tried to talk about things that aren't loops, and still talked about loops.  
            More examples of linear things are things that are finite lists: 
        p.
            In this view, I like to compare Core Loops and Linear Threads to an image of a large city.
        p     
            li.
                Core Loops are like highways that bring players through all parts of the city, 
                to experience the 365/24/7 cycle of daily life.
            li.
                Linear Threads are like the long drives and tourist stops along the way; 
                the things that lead to finality and the end of lists.


